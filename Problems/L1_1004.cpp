/*
L1_1004 成绩排名

读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。

输入格式：每个测试输入包含1个测试用例，格式为

第1行：正整数n
第2行：第1个学生的姓名 学号 成绩
第3行：第2个学生的姓名 学号 成绩
... ... ...
第n+1行：第n个学生的姓名 学号 成绩
其中姓名和学号均为不超过10个字符的字符串，成绩为0到100之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。
输出格式：对每个测试用例输出2行，第1行是成绩最高学生的姓名和学号，第2行是成绩最低学生的姓名和学号，字符串间有1空格。

输入样例：
3
Joe Math990112 89
Mike CS991301 100
Mary EE990830 95
输出样例：
Mike CS991301
Joe Math990112
*/

#include <stdio.h>
#include <stdlib.h>

typedef struct data
{
	char name[11];
	char ID_number[11];
	int grade;
} data;

int main(void)
{
	int size;
	scanf("%d", &size);
	getchar();
	data* student = (data*)calloc(size, sizeof(data));
	for (int i = 0; i < size; i++)
	{
		scanf("%s", student[i].name);
		scanf("%s", student[i].ID_number);
		scanf("%d", &student[i].grade);
		//getchar();
	}
	data temp;
	for (int i = 0; i < size; i++)
	{
		for (int j = i + 1; j < size; j++)
		{
			if (student[i].grade < student[j].grade)
			{
				temp = student[i];
				student[i] = student[j];
				student[j] = temp;
			}
		}
	}
	printf("%s %s\n", student[0].name, student[0].ID_number);
	printf("%s %s\n", student[size-1].name, student[size-1].ID_number);
	system("pause");
	return 0;
}